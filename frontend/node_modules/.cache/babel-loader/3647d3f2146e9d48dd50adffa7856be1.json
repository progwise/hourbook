{"ast":null,"code":"var _jsxFileName = \"/Users/christianma/DEV/hourbook/frontend/src/components/projectList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProjectList = props => {\n  _s();\n\n  const [selectedProjectId, setSelectedProjectId] = useState(props.projectId);\n  const projectData = [{\n    id: 1,\n    name: \"P1\",\n    start: new Date(\"2000-07-01\"),\n    status: \"active\"\n  }, {\n    id: 2,\n    name: \"P2\",\n    start: new Date(\"2005-05-01\"),\n    status: \"on hold\"\n  }, {\n    id: 3,\n    name: \"P3\",\n    start: new Date(\"2012-011-13\"),\n    status: \"canceled\"\n  }];\n\n  const selectProject = projectId => {\n    setSelectedProjectId(projectId);\n  };\n\n  const renderProject = (project, index) => {\n    if (selectedProjectId === project.id) {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: project.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: project.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: project.start.toDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: project.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: project.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: project.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: project.start.toDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: project.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => selectProject(project.id),\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Ende\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: projectData.map((project, index) => {\n        return renderProject(project, index);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProjectList, \"YcJEBsPpn2uRP7bsWqcKRRcqAns=\");\n\n_c = ProjectList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"sources":["/Users/christianma/DEV/hourbook/frontend/src/components/projectList.tsx"],"names":["useState","ProjectList","props","selectedProjectId","setSelectedProjectId","projectId","projectData","id","name","start","Date","status","selectProject","renderProject","project","index","toDateString","map"],"mappings":"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","sourcesContent":["import {IProject} from \"../interfaces/iProject\";\nimport {useState} from \"react\";\n\nexport interface IProjectIdProps {\n    projectId?: number\n}\n\nexport const ProjectList = (props: IProjectIdProps) => {\n\n    const [selectedProjectId, setSelectedProjectId] = useState(props.projectId)\n\n    const projectData: IProject[] = [\n        {\n            id: 1,\n            name: \"P1\",\n            start: new Date(\"2000-07-01\"),\n            status: \"active\",\n        }, {\n            id: 2,\n            name: \"P2\",\n            start: new Date(\"2005-05-01\"),\n            status: \"on hold\",\n        }, {\n            id: 3,\n            name: \"P3\",\n            start: new Date(\"2012-011-13\"),\n            status: \"canceled\",\n        }\n    ]\n\n    const selectProject = (projectId: number) => {\n        setSelectedProjectId(projectId)\n    }\n\n    const renderProject = (project: IProject, index: number) => {\n\n        if (selectedProjectId === project.id) {\n            return (\n                <tr key={index}>\n                    <td><b>{project.id}</b></td>\n                    <td><b>{project.name}</b></td>\n                    <td><b>{project.start.toDateString()}</b></td>\n                    <td><b>{project.status}</b></td>\n                    <td></td>\n                </tr>\n            )\n        }\n        return (\n            <tr key={index}>\n                <td>{project.id}</td>\n                <td>{project.name}</td>\n                <td>{project.start.toDateString()}</td>\n                <td>{project.status}</td>\n                <td>\n                    <button onClick={() => selectProject(project.id)}>Select</button>\n                </td>\n            </tr>\n        )\n    }\n\n    return <table>\n        <thead>\n        <tr>\n            <th>No</th>\n            <th>Name</th>\n            <th>Start</th>\n            <th>Ende</th>\n            <th>Select</th>\n        </tr>\n        </thead>\n        <tbody>\n        {\n            projectData.map((project, index) => {\n                return renderProject(project, index);\n            })\n        }\n        </tbody>\n        <tfoot></tfoot>\n    </table>\n}"]},"metadata":{},"sourceType":"module"}